The linear optimization is written in GNU MathProg, a modelling language intended for describing linear mathematical programming models.

a. Copy the linear program models to the `Model' tab in https://online-optimizer.appspot.com/
b. Run `Solve Model'
c. The bound of m is shown in `Optimal objective value' in `Model Overview'. See other tabs for more details.

== 3-2. s=4, C=1 === Sol: m >= 81 ==
# We have:
# q_T >= 2 for any T = a, ac, ad, acd.
# \sum_{b\in T\subseteq S, |T|\geq 2} q_T >= 11
# \sum_{b\in T\subseteq S, |T|\geq 3} q_T >= 7
# \sum_{b\in T\subseteq S, |T|\geq 4} q_T >= 2.
var a   >=2;
var b   >=1;
var c   >=1;
var d   >=1;
var ab  >=1;
var ac  >=2;
var ad  >=2;
var bc  >=1;
var bd  >=1;
var cd  >=1;
var abc >=1;
var acd >=2;
var abd >=1;
var bcd >=1;
var abcd>=1;
var m   >=0;
minimize y: m;

subject to M: 2+a+b+c+d+ab+ac+ad+bc+bd+cd+abc+abd+acd+bcd+abcd >=m; #2 is for {} and {1}.
subject to Ca: a+ab+ac+ad+abc+acd+abd+abcd <= m/3;
subject to Cb: b+ab+bc+bd+abc+bcd+abd+abcd <= m/3;
subject to Cc: c+cd+ac+bc+abc+acd+bcd+abcd <= m/3;
subject to Cd: d+cd+ad+bd+bcd+acd+abd+abcd <= m/3;
subject to CS1:ab+bc+bd+abc+abd+bcd+abcd >= 11;
subject to CS2:abc+abd+bcd+abcd >= 7;
subject to CS3:abc+abd+bcd+abcd >= 2;
end;
